import { describe, expect, it, vi } from 'vitest'
import { continueTimer, resetTimer, startTimer, stopTimer, timer } from 'composables/timer'

describe('Timer', () => {
  it('start timer', () => {
    vi.useFakeTimers()
    startTimer()
    vi.advanceTimersByTime(1000)
    expect(timer.value).toBe('00:01')
    vi.advanceTimersByTime(2000)
    expect(timer.value).toBe('00:03')
    vi.advanceTimersByTime(60000)
    expect(timer.value).toBe('01:03')
    vi.advanceTimersByTime(600000)
    expect(timer.value).toBe('11:03')
    vi.advanceTimersByTime(3600000)
    expect(timer.value).toBe('01:11:03')
    vi.advanceTimersByTime(86400000)
    expect(timer.value).toBe('1:01:11:03')
    vi.clearAllTimers()
  })

  it('stop timer and continue timer', () => {
    vi.useFakeTimers()
    startTimer()
    vi.advanceTimersByTime(603000)
    expect(timer.value).toBe('10:03')
    stopTimer()
    vi.advanceTimersByTime(10000)
    expect(timer.value).toBe('10:03')
    continueTimer()
    vi.advanceTimersByTime(10000)
    expect(timer.value).toBe('10:13')
    vi.clearAllTimers()
  })

  it('reset timer', () => {
    vi.useFakeTimers()
    startTimer()
    vi.advanceTimersByTime(603000)
    expect(timer.value).toBe('10:03')
    stopTimer()
    vi.advanceTimersByTime(10000)
    expect(timer.value).toBe('10:03')
    resetTimer()
    expect(timer.value).toBe('00:00')

    startTimer()
    vi.advanceTimersByTime(603000)
    expect(timer.value).toBe('10:03')
    stopTimer()
    vi.advanceTimersByTime(10000)
    expect(timer.value).toBe('10:03')
    startTimer()
    vi.advanceTimersByTime(603000)
    expect(timer.value).toBe('10:03')
    vi.clearAllTimers()
  })
})
